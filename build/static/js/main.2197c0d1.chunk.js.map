{"version":3,"sources":["api/api.js","store/types/authType.js","audio/login.mp3","components/Login.jsx","store/actions/authAction.js","components/Register.jsx","components/Friends.jsx","components/FriendInfo.jsx","components/Message.jsx","components/MessageSend.jsx","components/RightSide.jsx","store/types/messengerType.js","store/actions/messengerAction.js","audio/notification.mp3","audio/sending.mp3","audio/logout.mp3","components/ActiveFriend.jsx","components/ForCall.jsx","components/Messenger.jsx","components/ProtectRoute.jsx","App.js","reportWebVitals.js","store/reducers/authReducer.js","store/reducers/messengerReducer.js","store/index.js","index.js"],"names":["api","axios","create","baseURL","withCredentials","headers","concat","localStorage","getItem","REGISTER_FAIL","REGISTER_SUCCESS","SUCCESS_MESSAGE_CLEAR","ERROR_CLEAR","USER_LOGIN_FAIL","USER_LOGIN_SUCCESS","Login","_ref","history","_useSound","useSound","loginSound","loginSPlay","_slicedToArray","alert","useAlert","_useSelector","useSelector","state","auth","successMessage","loading","error","authenticate","dispatch","myInfo","useDispatch","_useState","useState","email","password","_useState2","setState","inputHendle","e","_objectSpread","_defineProperty","target","name","value","useEffect","push","success","type","map","err","_jsx","className","children","_jsxs","onSubmit","data","preventDefault","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","dispath","response","wrap","_context2","prev","next","post","sent","setItem","token","payload","t0","errorMessage","stop","_x2","apply","arguments","htmlFor","onChange","placeholder","id","Link","to","Register","userName","confirmPassword","image","setstate","_useState3","_useState4","loadImage","setLoadImage","formData","FormData","append","_callee","_context","_x","alt","src","files","length","reader","FileReader","onload","result","readAsDataURL","Friends","props","_props$friend","friend","fndInfo","msgInfo","myId","activeUser","some","u","userId","_id","senderId","undefined","status","message","text","slice","moment","createdAt","startOf","fromNow","RiCheckboxCircleFill","HiOutlineCheckCircle","FriendInfo","currentfriend","BsChevronDown","BiSearch","getFriendClass","document","getElementsByClassName","frienNameClass","i","innerText","toLowerCase","indexOf","style","display","getFriendClassw","frienNameClassw","m","index","Message","scrollRef","typingMessage","_Fragment","ref","msg","class","MessageSend","newMessage","sendMessage","emojiSend","ImageSend","BsPlusCircle","RiGalleryLine","onClick","IoSend","AiFillLike","RightSide","IoMdArrowRoundBack","IoCall","BsCameraVideoFill","FRIENDS_GET_SUCCESS","MESSAGE_GET_SUCCESS","MESSAGE_SEND_SUCCESS","seenMessage","_ref5","_callee5","_context5","console","log","_x5","themeSet","theme","_ref8","_callee8","_context8","_x8","ActiveFriend","user","setCurrentFriend","userInfo","ForCall","FiPhoneIncoming","SiGooglemessages","FiPhoneOutgoing","FiPhoneMissed","Messenger","notificationSound","notificationSPlay","_useSound3","sendingSound","sendingSPlay","_useSound5","logoutSound","logoutSPlay","_useSelector2","messenger","friends","messageSendSuccess","message_get_success","themeMood","new_user_add","setNewMessage","_useState5","_useState6","socketMessage","setSocketMessage","_useState7","_useState8","setTypingMessage","_useState9","_useState10","setActiveUser","useRef","socket","current","io","on","emit","users","filterUser","filter","reseverId","toast","senderName","_ref6","_callee6","_context6","_x6","get","_ref3","_callee3","_context3","_x3","_scrollRef$current","scrollIntoView","behavior","_useState11","_useState12","hide","setHide","_ref7","_callee7","_context7","_x7","Toaster","position","reverseOrder","toastOptions","fontSize","defaultChecked","CgColorBucket","removeItem","IoLogOutOutline","fd","BsFillChatFill","BsFillCameraVideoFill","BsFillPeopleFill","_ref4","_callee4","_context4","_x4","messageSend","emu","ProtectRoute","Route","path","component","exact","Redirect","App","Router","Switch","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","authState","tokenDecode","tokenDecoded","deCodeToken","expTime","Date","exp","getToken","getInfo","messengerState","rootReducer","combineReducers","action","_toConsumableArray","findIndex","f","middleware","thunkMiddleware","store","createStore","compose","applyMiddleware","options","timeout","positions","BOTTOM_CENTER","transitions","SCALE","ReactDOM","render","Provider","AlertProvider","template","alertTemplate","getElementById"],"mappings":"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","file":"static/js/main.2197c0d1.chunk.js","sourcesContent":["import axios from 'axios'\r\nexport const local = 'http://localhost:5000'\r\nexport const production = 'https://backend-azure-two.vercel.app'\r\nexport const api = axios.create({\r\n    baseURL: production,\r\n    withCredentials: true,\r\n    headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('authToken')}`\r\n    }\r\n})","export const REGISTER_FAIL ='REGISTER_FAIL'\r\nexport const REGISTER_SUCCESS ='REGISTER_SUCCESS'\r\nexport const SUCCESS_MESSAGE_CLEAR = 'SUCCESS_MESSAGE_CLEAR'\r\nexport const ERROR_CLEAR = 'ERROR_CLEAR'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS' \r\n","export default __webpack_public_path__ + \"static/media/login.3ddd5f8e.mp3\";","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { userLogin } from \"../store/actions/authAction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { SUCCESS_MESSAGE_CLEAR, ERROR_CLEAR } from \"../store/types/authType\";\r\nimport useSound from 'use-sound';\r\nimport loginSound from '../audio/login.mp3';\r\n\r\n\r\nconst Login = ({ history }) => {\r\n\r\n\r\n    const [loginSPlay] = useSound(loginSound);\r\n    const alert = useAlert();\r\n    const { loading, successMessage, error, authenticate, myInfo } = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n    const [state, setState] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const inputHendle = (e) => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const login = (e) => {\r\n\r\n        e.preventDefault();\r\n        dispatch(userLogin(state));\r\n        loginSPlay();\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (authenticate) {\r\n            history.push('/')\r\n        }\r\n        if (successMessage) {\r\n            alert.success(successMessage);\r\n            dispatch({ type: SUCCESS_MESSAGE_CLEAR })\r\n        }\r\n        if (error) {\r\n            error.map(err => alert.error(err));\r\n            dispatch({ type: ERROR_CLEAR })\r\n        }\r\n    }, [successMessage, error])\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                    <h3>Login</h3>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={login}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input onChange={inputHendle} value={state.email} type=\"email\" placeholder=\"email\" name=\"email\" id=\"email\" className=\"form-control\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input onChange={inputHendle} value={state.password} type=\"password\" name=\"password\" id=\"password\" placeholder=\"password\" className=\"form-control\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"submit\" value=\"Login\" className=\"btn\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <span><Link to=\"/MESSENGER/Register\">Register Your Account</Link></span>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Login","import {api} from '../../api/api'\r\nimport { REGISTER_FAIL,REGISTER_SUCCESS, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL} from \"../types/authType\";\r\nexport const userRegister = (data) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await api.post('/api/messenger/user-register', data);\r\n            \r\n            localStorage.setItem('authToken', response.data.token);\r\n\r\n            dispatch({\r\n                type : REGISTER_SUCCESS,\r\n                payload : {\r\n                    successMessage : response.data.successMessage,\r\n                    token : response.data.token\r\n                }\r\n            })\r\n\r\n        } catch (error){\r\n            dispatch({\r\n                type : REGISTER_FAIL,\r\n                payload : {\r\n                    error: error.response.data.error.errorMessage\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const userLogin = (data) => {\r\n    return async (dispath) => {\r\n        try {\r\n            const response = await api.post('/api/messenger/user-login', data);\r\n            localStorage.setItem('authToken', response.data.token);\r\n            dispath({\r\n                type: USER_LOGIN_SUCCESS,\r\n                payload: {\r\n                    successMessage: response.data.successMessage,\r\n                    token: response.data.token\r\n                }\r\n            })\r\n        } catch (error) {\r\n            dispath({\r\n                type: USER_LOGIN_FAIL,\r\n                payload: {\r\n                    error: error.response.data.error.errorMessage\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const userLogout = ()=>async(dispatch)=>{\r\n    try {\r\n        const response = await api.post('/api/messenger/user-logout');\r\n        if(response.data.success){\r\n            localStorage.removeItem('authToken');\r\n            dispatch({\r\n                type : 'LOGOUT_SUCCESS',\r\n            })\r\n        }\r\n    } catch (error) {\r\n        \r\n    }\r\n}","import React,{useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { userRegister } from \"../store/actions/authAction\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { SUCCESS_MESSAGE_CLEAR,ERROR_CLEAR } from \"../store/types/authType\";\r\n\r\nconst Register = ({history}) => {\r\n\r\nconst alert = useAlert();\r\n    const { loading,successMessage,error,authenticate,myInfo} = useSelector(state=>state.auth);\r\n\r\n    //console.log(myInfo)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [state,setstate] = useState({\r\n        userName : '',\r\n        email : '',\r\n        password : '',\r\n        confirmPassword : '',\r\n        image : ''\r\n    });\r\n\r\n    const[loadImage,setLoadImage] = useState('');\r\n\r\n    const inputHendle = (e) =>{\r\n        setstate({\r\n            ...state,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const fileHendle = e =>{\r\n        if(e.target.files.length !==0){\r\n            setstate({\r\n                ...state,\r\n                [e.target.name] : e.target.files[0]\r\n            })\r\n        }\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () =>{\r\n            setLoadImage(reader.result)\r\n        }\r\n        reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n\r\n    const register = e =>{\r\n        const {userName,email,password,image,confirmPassword} = state;\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n\r\n        formData.append('userName',userName);\r\n        formData.append('email',email);\r\n        formData.append('password',password);\r\n        formData.append('confirmPassword',confirmPassword);\r\n        formData.append('image',image);\r\n\r\n        dispatch(userRegister(formData));\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(authenticate){\r\n            history.push('/')\r\n        }\r\n        if(successMessage){\r\n            alert.success(successMessage);\r\n           dispatch({type : SUCCESS_MESSAGE_CLEAR})\r\n        }\r\n        if(error){\r\n            error.map(err=>alert.error(err));\r\n            dispatch({type : ERROR_CLEAR})\r\n        }\r\n    },[successMessage,error])\r\n\r\n    \r\n      \r\n    return(\r\n        <div className='register'>\r\n            <div className='card'>\r\n                <div className='card-header'>\r\n                    <h3>Register</h3>\r\n                </div>\r\n                <div className='card-body'>\r\n                    <form onSubmit={register}>\r\n                        <div className='form-group'>\r\n                            <label htmlFor=\"username\">User Name</label>\r\n                            <input type=\"text\" onChange={inputHendle}\r\n                            name=\"userName\" value={state.userName} className='form-control'\r\n                            placeholder='user name' id='username' />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input type=\"email\" onChange={inputHendle}\r\n                            name=\"email\" value={state.email} className='form-control'\r\n                            placeholder='email' id='email' />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input type=\"password\" onChange={inputHendle}\r\n                            name=\"password\" value={state.password} className='form-control'\r\n                            placeholder='password' id='password' />\r\n                        </div>\r\n                        <div className='form-group'>\r\n                            <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                            <input type=\"Password\" onChange={inputHendle}\r\n                            name=\"confirmPassword\" value={state.confirmPassword} className='form-control'\r\n                            placeholder='confirm password' id='confirmPassword' />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"file-image\">\r\n                                <div className=\"image\">\r\n                                    {loadImage ? <img alt=\"Blank\" src={loadImage} /> : \"\" }\r\n                                </div>\r\n                                <div className=\"file\">\r\n                                    <label htmlFor=\"image\">Select Image</label>\r\n                                    <input type=\"file\" onChange={fileHendle} \r\n                                    name=\"image\" className=\"form-control\" id=\"image\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"submit\" value='register' className=\"btn\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <span><Link to=\"/messenger/login\">Login Your Account</Link></span>\r\n                            \r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Register","import React from 'react';\r\nimport moment from 'moment';\r\nimport { HiOutlineCheckCircle, RiCheckboxCircleFill } from \"react-icons/all\";\r\n\r\nconst Friends = (props) => {\r\n    const { fndInfo, msgInfo } = props.friend;\r\n    const myId = props.myId;\r\n    const { activeUser } = props;\r\n    return (\r\n        <div className='friend'>\r\n            <label htmlFor=\"friendCheckbox\">\r\n                <div className=\"friend-image\">\r\n                    <div className=\"image\">\r\n                        <img src={fndInfo.image} alt=\"\" />\r\n                        {\r\n                            activeUser && activeUser.length > 0 && activeUser.some(u => u.userId === fndInfo._id) ? <div className=\"active_icon\"></div> : ''\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"friend-name-seen\">\r\n                    <div className=\"friend-name\">\r\n                        <h4 className={msgInfo?.senderId !== myId && msgInfo?.status !== undefined && msgInfo?.status !== 'seen' ? 'unseen_message Fd_name' : 'Fd_name'} >{fndInfo.userName}</h4>\r\n                        <div className=\"msg-time\">\r\n                            {\r\n                                msgInfo && msgInfo.senderId === myId ? <span>You </span> : <span className={msgInfo?.senderId !== myId && msgInfo?.status !== undefined && msgInfo?.status !== 'seen' ? 'unseen_message' : ''}>{fndInfo.userName + ''} </span>\r\n\r\n                            }\r\n                            {\r\n                                msgInfo && msgInfo.message.text ? <span className={msgInfo?.senderId !== myId && msgInfo?.status !== undefined && msgInfo?.status !== 'seen' ? 'unseen_message' : ''}>{msgInfo.message.text.slice(0, 10)}. </span> : msgInfo && msgInfo.message.image ? <span> send a image. </span> : <span> Registered </span>\r\n                            }\r\n                            <span>{msgInfo ? moment(msgInfo.createdAt).startOf('mini').fromNow() : moment(fndInfo.createdAt).startOf('mini').fromNow()}</span>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n\r\n                        myId === msgInfo?.senderId ?\r\n                            <div className=\"seen-unseen-icon\">\r\n\r\n                                {\r\n                                    msgInfo.status === 'seen' ?\r\n                                        <img src={fndInfo.image} alt=\"\" /> : msgInfo.status === 'delivared' ? <div className=\"delivared\"><RiCheckboxCircleFill /></div> : <div className='unseen'><HiOutlineCheckCircle /></div>\r\n                                }\r\n                            </div> :\r\n                            <div className=\"seen-unseen-icon\">\r\n                                {\r\n                                    msgInfo?.status !== undefined && msgInfo?.status !== 'seen' ? <div className=\"seen-icon\"></div> : ''\r\n                                }\r\n\r\n                            </div>\r\n                    }\r\n                </div>\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friends","import React from 'react'\r\nimport { BsChevronDown, BiSearch } from 'react-icons/all'\r\nimport moment from 'moment';\r\n\r\nconst FriendInfo = ({ currentfriend, activeUser, message }) => {\r\n\r\n    const search = (e) => {\r\n        const getFriendClass = document.getElementsByClassName('my-message');\r\n        const frienNameClass = document.getElementsByClassName('my-text');\r\n        for (var i = 0; i < getFriendClass.length, i < frienNameClass.length; i++) {\r\n            let text = frienNameClass[i].innerText.toLowerCase();\r\n            if (text.indexOf(e.target.value.toLowerCase()) > -1) {\r\n                getFriendClass[i].style.display = '';\r\n            } else {\r\n                getFriendClass[i].style.display = 'none';\r\n            }\r\n        }\r\n        const getFriendClassw = document.getElementsByClassName('fd-message');\r\n        const frienNameClassw = document.getElementsByClassName('fd-text');\r\n        for (i = 0; i < getFriendClassw.length, i < frienNameClassw.length; i++) {\r\n            let text = frienNameClassw[i].innerText.toLowerCase();\r\n            if (text.indexOf(e.target.value.toLowerCase()) > -1) {\r\n                getFriendClassw[i].style.display = '';\r\n            } else {\r\n                getFriendClassw[i].style.display = 'none';\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='friend-info'>\r\n            <input type=\"checkbox\" id='gallery' />\r\n            <div className=\"image-name\">\r\n                <div className=\"image\">\r\n                    <img src={currentfriend.image} alt=\"\" />\r\n                </div>\r\n                <div className=\"name\">\r\n                    <h4>{currentfriend.userName}</h4>\r\n                </div>\r\n                {\r\n                    activeUser && activeUser.length > 0 && activeUser.some(u => u.userId === currentfriend._id) ? <div className=\"active-user\"> Active </div> : <div className=\"active-user\"> Offline </div>\r\n                }\r\n            </div>\r\n            <div className=\"others\">\r\n                <input type=\"checkbox\" id='searchMessage' />\r\n                <input type=\"checkbox\" id='fDetils' />\r\n\r\n\r\n                <div className=\"custom-chat\">\r\n                    <label htmlFor=\"fDetils\"><h3>Friend Detils </h3></label>\r\n                    <label className='arrowDown' htmlFor=\"fDetils\"><BsChevronDown /></label>\r\n                </div>\r\n\r\n                <div className=\"dropDownFndInfo\">\r\n\r\n                    <div className=\"fDetils\">\r\n                        <div className=\"fndDetils\">\r\n                            User Name : {currentfriend.userName}\r\n                        </div> <br />\r\n                        <div className=\"fndDetils\">\r\n                            Email : {currentfriend.email}\r\n                        </div> <br />\r\n                        <div className=\"fndDetils\">\r\n                            Registered : {moment(currentfriend.createdAt).startOf('mini').fromNow()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"privacy\">\r\n                    <label htmlFor=\"searchMessage\"><h3>Search Message </h3></label>\r\n                    <label className='arrowDown' htmlFor=\"searchMessage\"><BsChevronDown /></label>\r\n                </div>\r\n                <div className=\"searchMessage\">\r\n                    <div className=\"search\">\r\n                        <button><BiSearch /></button>\r\n                        <input onChange={search} type=\"text\" placeholder='search' className=\"form-control\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"media\">\r\n                    <label htmlFor=\"gallery\"><h3>Shared Media </h3></label>\r\n                    <label className='arrowDown' htmlFor=\"gallery\"><BsChevronDown /></label>\r\n                </div>\r\n            </div>\r\n            <div className=\"conversationImage\">\r\n                <div className=\"gallery\">\r\n                    {\r\n                        message && message.length > 0 ? message.map((m, index) => m.message.image && <img key={index} src={m.message.image} alt='' />) : ''\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriendInfo","import React from 'react'\r\nimport { useSelector } from \"react-redux\";\r\nimport moment from 'moment';\r\nimport { HiOutlineCheckCircle, RiCheckboxCircleFill } from \"react-icons/all\";\r\n\r\nconst Message = ({ message, currentfriend, scrollRef, typingMessage }) => {\r\n\r\n    const { myInfo } = useSelector(state => state.auth);\r\n\r\n    return (\r\n        <>\r\n            <div className='message-show'>\r\n                {\r\n                    message && message.length > 0 ? message.map((m, index) =>\r\n                        m.senderId === myInfo.id ? <div key={index} ref={scrollRef} className=\"my-message\">\r\n                            <div className=\"image-message\">\r\n                                <div className=\"my-text\">\r\n                                    <p className='message-text my'>{m.message.text === '' ? <img src={m.message.image} alt='image' /> : m.message.text}</p>\r\n                                    {\r\n                                        index === message.length - 1 && m.senderId === myInfo.id ?\r\n                                            m.status === 'seen' ? <img className='img' src={currentfriend.image} alt=\"\" /> : m.status === 'delivared' ? <span><RiCheckboxCircleFill /></span> : <span><HiOutlineCheckCircle /></span> : ''\r\n                                    }\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"time\">\r\n                                {moment(m.createdAt).startOf('mini').fromNow()}\r\n                            </div>\r\n                        </div> : <div key={index} ref={scrollRef} className=\"fd-message\">\r\n                            <div className=\"image-message-time\">\r\n                                <img src={currentfriend.image} alt=\"\" />\r\n                                <div className=\"message-time\">\r\n                                    <div className=\"fd-text\">\r\n                                        <p className='message-text fd'>{m.message.text === '' ? <img src={m.message.image} alt='image' /> : m.message.text}</p>\r\n                                    </div>\r\n                                    <div className=\"time\">\r\n                                        {moment(m.createdAt).startOf('mini').fromNow()}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) : <div className='friend_connect'>\r\n                        <img src={currentfriend.image} alt=\"\" />\r\n                        <h3>{currentfriend.userName} Connected You</h3>\r\n                        <span>{moment(currentfriend.createdAt).startOf('mini').fromNow()}</span>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n            {\r\n                typingMessage && typingMessage.msg && typingMessage.senderId === currentfriend._id ? <div className=\"typing-message\">\r\n                    <div className=\"fd-message\">\r\n                        <div className=\"image-message-time\">\r\n                            <img src={currentfriend.image} alt=\"\" />\r\n                            <div className=\"message-time\">\r\n                                <div className=\"fd-text\">\r\n                                    <p className='message-text'><div id=\"wave\">\r\n                                        <span class=\"srfriendzone\"> {currentfriend.userName} is typing </span>\r\n                                        <span class=\"dot one\"></span>\r\n                                        <span class=\"dot two\"></span>\r\n                                        <span class=\"dot three\"></span>\r\n                                    </div></p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> : ''\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport { BsPlusCircle, RiGalleryLine, AiFillLike, IoSend } from 'react-icons/all'\r\n\r\nconst MessageSend = ({ inputHendle, newMessage, sendMessage, emojiSend, ImageSend }) => {\r\n\r\n    const emojis = [\r\n        '😀', '😃', '😄', '😁',\r\n        '😆', '😅', '😂', '🤣',\r\n        '😊', '😇', '🙂', '🙃',\r\n        '😉', '😌', '😍', '😝',\r\n        '😜', '🧐', '🤓', '😎',\r\n        '😕', '🤑', '🥴', '😱',\r\n        '👋', '🎉', '📚', '❤️'\r\n    ]\r\n\r\n    return (\r\n        <div className='message-send-section'>\r\n            <input type=\"checkbox\" id='emoji' />\r\n            <div className=\"file hover-attachment\">\r\n                <div className=\"add-attachment\">\r\n                    Add Attachment\r\n                </div>\r\n                <input onChange={ImageSend} type=\"file\" id='pic' className=\"form-control\" />\r\n                <label htmlFor=\"pic\"><BsPlusCircle /></label>\r\n            </div>\r\n            <div className=\"file hover-image\">\r\n                <div className=\"add-image\">\r\n                    Add Image\r\n                </div>\r\n                <input onChange={ImageSend} type=\"file\" id='pic' className=\"form-control\" />\r\n                <label htmlFor=\"pic\"><RiGalleryLine /></label>\r\n            </div>\r\n            <div className=\"message-type\">\r\n                <input onChange={inputHendle} type=\"text\" name='message' id='message' placeholder='Aa' value={newMessage} className=\"form-control\" />\r\n                <label htmlFor=\"emoji\">🙂</label>\r\n            </div>\r\n            <div onClick={sendMessage} className=\"file sentOrLike\">\r\n                <label className='sentOrLikeO'>\r\n\r\n                    {\r\n                        newMessage ? <IoSend /> : <AiFillLike />\r\n                    }\r\n                </label>\r\n\r\n            </div>\r\n            <div className=\"emoji-section\">\r\n                <div className=\"emoji\">\r\n                    {\r\n                        emojis.map((e, index) => <span key={index} onClick={() => emojiSend(e)} >{e}</span>)\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageSend","import React from 'react'\r\nimport { IoMdArrowRoundBack, BsCameraVideoFill, IoCall } from 'react-icons/all'\r\nimport FriendInfo from './FriendInfo'\r\nimport Message from './Message'\r\nimport MessageSend from './MessageSend'\r\n\r\nconst RightSide = (props) => {\r\n    const {\r\n        currentfriend,\r\n        inputHendle,\r\n        newMessage,\r\n        sendMessage,\r\n        message,\r\n        scrollRef,\r\n        emojiSend,\r\n        ImageSend,\r\n        activeUser,\r\n        typingMessage,\r\n    } = props;\r\n\r\n    return (\r\n        <div className='col-9'>\r\n            <div className=\"right-side\">\r\n                <input type=\"checkbox\" id='dot' />\r\n                <div className=\"row\">\r\n                    <div className=\"col-8\">\r\n                        <div className=\"message-send-show\">\r\n                        <div className=\"header\">\r\n                                <label className=\"backBtn\" htmlFor=\"friendCheckbox\">\r\n                                    <div className=\"backIcon\">\r\n                                        <IoMdArrowRoundBack />\r\n                                    </div>\r\n                                    \r\n                                </label>\r\n                                <label htmlFor=\"dot\">\r\n                                    <div className=\"image-name\">\r\n                                        <div className=\"image\">\r\n                                            <img src={currentfriend.image} alt=\"\" />\r\n                                            {\r\n                                                activeUser && activeUser.length > 0 && activeUser.some(u => u.userId === currentfriend._id) ?\r\n                                                    <div className=\"active-icon\"></div> : ''\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"name\">\r\n                                            <h3> {currentfriend.userName} </h3>\r\n                                            <span>{\r\n                                                activeUser && activeUser.length > 0 && activeUser.some(u => u.userId === currentfriend._id) ? 'Active now' : 'Offline'}\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </label>\r\n                                <div className=\"icons\">\r\n                                    <div className=\"icon hide\">\r\n                                        <IoCall />\r\n                                    </div>\r\n                                    <div className=\"icon hide\">\r\n                                        <BsCameraVideoFill />\r\n                                    </div>\r\n                                    <div className=\"icon\">\r\n                                        <label htmlFor=\"dot\">\r\n                                            <div className=\"hamburger\">\r\n                                                <div className=\"menu\">\r\n                                                    <div className=\"bar1\"></div>\r\n                                                    <div className=\"bar2\"></div>\r\n                                                    <div className=\"bar3\"></div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Message\r\n                                currentfriend={currentfriend}\r\n                                scrollRef={scrollRef}\r\n                                message={message}\r\n                                typingMessage={typingMessage}\r\n                            />\r\n                            <MessageSend\r\n                                ImageSend={ImageSend}\r\n                                emojiSend={emojiSend}\r\n                                sendMessage={sendMessage}\r\n                                inputHendle={inputHendle}\r\n                                newMessage={newMessage}\r\n                                typingMessage={typingMessage}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        <FriendInfo message={message} currentfriend={currentfriend} activeUser={activeUser} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RightSide","export const FRIENDS_GET_SUCCESS = 'FRIENDS_GET_SUCCESS';\r\nexport const MESSAGE_GET_SUCCESS = 'MESSAGE_GET_SUCCESS';\r\nexport const MESSAGE_SEND_SUCCESS = 'MESSAGE_SEND_SUCCESS';\r\nexport const UPDATE_FRIEND_MESSAGE = 'UPDATE_FRIEND_MESSAGE';\r\nexport const MESSAGE_SEND_SUCCESS_CLEAR = 'MESSAGE_SEND_SUCCESS_CLEAR';\r\nexport const SEEN_MESSAGE = 'SEEN_MESSAGE';\r\nexport const DELIVARED_MESSAGE = 'DELIVARED_MESSAGE';\r\nexport const UPDATE = 'UPDATE';\r\nexport const MESSAGE_GET_SUCCESS_CLEAR = 'MESSAGE_GET_SUCCESS_CLEAR';\r\n\r\n","import {api} from '../../api/api'\r\nimport { FRIENDS_GET_SUCCESS, MESSAGE_GET_SUCCESS, MESSAGE_SEND_SUCCESS } from \"../types/messengerType\";\r\nexport const getFriends = () => async (dispatch) => {\r\n    console.log(api)\r\n    try {\r\n        const response = await api.get('/api/messenger/get-friends');\r\n        dispatch({\r\n            type: FRIENDS_GET_SUCCESS,\r\n            payload: {\r\n                friends: response.data.friends\r\n            }\r\n        })\r\n    } catch (error) {\r\n        console.log(error.response.data);\r\n    }\r\n}\r\n\r\nexport const messageSend = (data) => async (dispatch) => {\r\n\r\n    try {\r\n        const response = await api.post('/api/messenger/send-message', data);\r\n        dispatch({\r\n            type: MESSAGE_SEND_SUCCESS,\r\n            payload: {\r\n                message: response.data.message\r\n            }\r\n        })\r\n    } catch (error) {\r\n        console.log(error.response.data);\r\n    }\r\n}\r\n\r\nexport const getMessage = (id) => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            const response = await api.get(`/api/messenger/get-message/${id}`)\r\n            dispatch({\r\n                type: MESSAGE_GET_SUCCESS,\r\n                payload: {\r\n                    message: response.data.message\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error.response.data);\r\n        }\r\n    }\r\n}\r\n\r\nexport const ImageMessageSend = (data) => async (dispatch) => {\r\n\r\n    try {\r\n        const response = await api.post('/api/messenger/image-message-send', data);\r\n        dispatch({\r\n            type: MESSAGE_SEND_SUCCESS,\r\n            payload: {\r\n                message: response.data.message\r\n            }\r\n        })\r\n    } catch (error) {\r\n        console.log(error.response.data)\r\n    }\r\n\r\n}\r\n\r\nexport const seenMessage = (msg) => async (dispatch) => {\r\n    try {\r\n        const response = await api.post('/api/messenger/seen-message', msg);\r\n    } catch (error) {\r\n        console.log(error.response.message)\r\n    }\r\n}\r\nexport const updateMessage = (msg) => async (dispatch) => {\r\n    try {\r\n        const response = await api.post('/api/messenger/delivared-message', msg);\r\n    } catch (error) {\r\n        console.log(error.response.message)\r\n    }\r\n}\r\n\r\nexport const getTheme = () => async (dispatch) => {\r\n\r\n    const theme = localStorage.getItem('theme');\r\n    dispatch({\r\n        type: \"THEME_GET_SUCCESS\",\r\n        payload: {\r\n            theme: theme ? theme : 'white'\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const themeSet = (theme) => async (dispatch) => {\r\n\r\n    localStorage.setItem('theme', theme);\r\n    dispatch({\r\n        type: \"THEME_SET_SUCCESS\",\r\n        payload: {\r\n            theme: theme\r\n        }\r\n    })\r\n}","export default __webpack_public_path__ + \"static/media/notification.a9597953.mp3\";","export default __webpack_public_path__ + \"static/media/sending.aca82518.mp3\";","export default __webpack_public_path__ + \"static/media/logout.52f04a7e.mp3\";","import React from 'react'\r\n\r\nconst ActiveFriend = ({ user, setCurrentFriend }) => {\r\n    return (\r\n        <div>\r\n            <div onClick={() => setCurrentFriend({\r\n                _id: user.userInfo.id,\r\n                email: user.userInfo.email,\r\n                image: user.userInfo.image,\r\n                userName: user.userInfo.userName\r\n            })} className=\"active-friend\">\r\n                <label htmlFor=\"friendCheckbox\">\r\n                    <div className=\"image-active-icon\">\r\n\r\n                        <div className=\"image\">\r\n                            <img src={user.userInfo.image} alt=\"\" />\r\n                            <div className=\"active-icon\"></div>\r\n                        </div>\r\n\r\n                    </div><p>{user.userInfo.userName}</p></label>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActiveFriend","import React from 'react'\r\nimport moment from 'moment';\r\nimport { FiPhoneIncoming, FiPhoneOutgoing, FiPhoneMissed, SiGooglemessages } from \"react-icons/all\";\r\nconst ForCall = ({ currentfriend }) => {\r\n    return (\r\n        <div className=\"call-friend\">\r\n            <span className='recents'> Recents </span>\r\n            <label htmlFor=\"/\"> {/* friendCheckbox */}\r\n                <div className=\"image-call-icon\">\r\n                    <div className=\"image\">\r\n                        <img src={currentfriend.image} alt=\"\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"call-detils-conversation\">\r\n                    <div className=\"call-detils\">\r\n                        <h4>{currentfriend.userName}</h4>\r\n                        <div className=\"call-time\">\r\n                            <span> <FiPhoneIncoming /> Incoming. </span>\r\n                            <span> {moment(currentfriend.createdAt).startOf('mini').fromNow()} </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"conversation\"><SiGooglemessages /></div>\r\n                </div>\r\n            </label>\r\n            <label htmlFor=\"/\"> {/* friendCheckbox */}\r\n                <div className=\"image-call-icon\">\r\n                    <div className=\"image\">\r\n                        <img src={currentfriend.image} alt=\"\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"call-detils-conversation\">\r\n                    <div className=\"call-detils\">\r\n                        <h4>{currentfriend.userName}</h4>\r\n                        <div className=\"call-time\">\r\n                            <span> <FiPhoneOutgoing /> Outgoing. </span>\r\n                            <span> {moment(currentfriend.createdAt).startOf('mini').fromNow()} </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"conversation\"><SiGooglemessages /></div>\r\n                </div>\r\n            </label>\r\n            <label htmlFor=\"/\"> {/* friendCheckbox */}\r\n                <div className=\"image-call-icon\">\r\n                    <div className=\"image\">\r\n                        <img src={currentfriend.image} alt=\"\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"call-detils-conversation\">\r\n                    <div className=\"call-detils\">\r\n                        <h4>{currentfriend.userName}</h4>\r\n                        <div className=\"call-time\">\r\n                            <span className='missed'> <FiPhoneMissed /> Missed. </span>\r\n                            <span> {moment(currentfriend.createdAt).startOf('mini').fromNow()} </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"conversation\"><SiGooglemessages /></div>\r\n                </div>\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForCall","import React, { useEffect, useState, useRef } from 'react'\r\nimport { BiSearch, IoLogOutOutline, CgColorBucket, BsFillPeopleFill, BsFillChatFill, BsFillCameraVideoFill } from \"react-icons/all\";\r\nimport Friends from './Friends';\r\nimport RightSide from './RightSide';\r\nimport { io } from \"socket.io-client\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getFriends, messageSend, getMessage, ImageMessageSend, seenMessage, updateMessage, getTheme, themeSet } from \"../store/actions/messengerAction\";\r\nimport { userLogout } from \"../store/actions/authAction\";\r\nimport useSound from 'use-sound';\r\nimport notificationSound from '../audio/notification.mp3';\r\nimport sendingSound from '../audio/sending.mp3';\r\nimport logoutSound from '../audio/logout.mp3';\r\nimport ActiveFriend from './ActiveFriend';\r\nimport ForCall from './ForCall';\r\nimport { local, production } from '../api/api'\r\n\r\nconst Messenger = () => {\r\n    const [notificationSPlay] = useSound(notificationSound);\r\n    const [sendingSPlay] = useSound(sendingSound);\r\n    const [logoutSPlay] = useSound(logoutSound);\r\n    const { myInfo } = useSelector(state => state.auth);\r\n    const { friends, message, messageSendSuccess, message_get_success, themeMood, new_user_add } = useSelector(state => state.messenger);\r\n    const [currentfriend, setCurrentFriend] = useState('');\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const [socketMessage, setSocketMessage] = useState('');\r\n    const [typingMessage, setTypingMessage] = useState('')\r\n    const [activeUser, setActiveUser] = useState([]);\r\n    const scrollRef = useRef();\r\n    const socket = useRef();\r\n\r\n    useEffect(() => {\r\n        socket.current = io(`wss://backend-azure-two.vercel.app`);\r\n        socket.current.on('getMessage', (data) => {\r\n            setSocketMessage(data);\r\n        })\r\n        socket.current.on('typingMessageGet', (data) => {\r\n            setTypingMessage(data);\r\n        })\r\n        socket.current.on('msgSeenResponse', msg => {\r\n            dispatch({\r\n                type: 'SEEN_MESSAGE',\r\n                payload: {\r\n                    msgInfo: msg\r\n                }\r\n            })\r\n        })\r\n        socket.current.on('msgDelivaredResponse', msg => {\r\n            dispatch({\r\n                type: 'DELIVARED_MESSAGE',\r\n                payload: {\r\n                    msgInfo: msg\r\n                }\r\n            })\r\n        })\r\n        socket.current.on('seenSuccess', data => {\r\n            dispatch({\r\n                type: 'SEEN_ALL',\r\n                payload: data\r\n            })\r\n        })\r\n    }, []);\r\n    useEffect(() => {\r\n        socket.current.emit('addUser', myInfo.id, myInfo)\r\n    }, []);\r\n    useEffect(() => {\r\n        socket.current.on('getUser', (users) => {\r\n            const filterUser = users.filter(u => u.userId !== myInfo.id);\r\n            setActiveUser(filterUser);\r\n        });\r\n        socket.current.on('new_user_add', data => {\r\n            dispatch({\r\n                type: 'NEW_USER_ADD',\r\n                payload: {\r\n                    new_user_add: data\r\n                }\r\n            })\r\n        })\r\n    }, [])\r\n    useEffect(() => {\r\n        if (socketMessage && currentfriend) {\r\n            if (socketMessage.senderId === currentfriend._id && socketMessage.reseverId === myInfo.id) {\r\n                dispatch({\r\n                    type: 'SOCKET_MESSAGE',\r\n                    payload: {\r\n                        message: socketMessage\r\n                    }\r\n                })\r\n                dispatch(seenMessage(socketMessage));\r\n                socket.current.emit('messageSeen', socketMessage);\r\n                dispatch({\r\n                    type: 'UPDATE_FRIEND_MESSAGE',\r\n                    payload: {\r\n                        msgInfo: socketMessage,\r\n                        status: 'seen'\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        setSocketMessage('')\r\n    }, [socketMessage])\r\n    useEffect(() => {\r\n        if (socketMessage && socketMessage.senderId !== currentfriend._id && socketMessage.reseverId === myInfo.id) {\r\n            notificationSPlay();\r\n            toast.success(`${socketMessage.senderName} send a new message`)\r\n            dispatch(updateMessage(socketMessage));\r\n            socket.current.emit('delivaredMessage', socketMessage);\r\n            dispatch({\r\n                type: 'UPDATE_FRIEND_MESSAGE',\r\n                payload: {\r\n                    msgInfo: socketMessage,\r\n                    status: 'delivared'\r\n                }\r\n            })\r\n        }\r\n    }, [socketMessage])\r\n    const inputHendle = (e) => {\r\n        setNewMessage(e.target.value);\r\n        socket.current.emit('typingMessage', {\r\n            senderId: myInfo.id,\r\n            reseverId: currentfriend._id,\r\n            msg: e.target.value\r\n        })\r\n    }\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        sendingSPlay();\r\n        const data = {\r\n            senderName: myInfo.userName,\r\n            reseverId: currentfriend._id,\r\n            message: newMessage ? newMessage : '👍'\r\n        }\r\n        socket.current.emit('typingMessage', {\r\n            senderId: myInfo.id,\r\n            reseverId: currentfriend._id,\r\n            msg: ''\r\n        })\r\n        dispatch(messageSend(data));\r\n        setNewMessage('')\r\n    }\r\n    const emojiSend = (emu) => {\r\n        setNewMessage(`${newMessage}` + emu);\r\n        socket.current.emit('typingMessage', {\r\n            senderId: myInfo.id,\r\n            reseverId: currentfriend._id,\r\n            msg: emu\r\n        })\r\n    }\r\n    const ImageSend = (e) => {\r\n        if (e.target.files.length !== 0) {\r\n            sendingSPlay();\r\n            const formData = new FormData();\r\n            formData.append('senderName', myInfo.userName);\r\n            formData.append('reseverId', currentfriend._id);\r\n            formData.append('image', e.target.files[0]);\r\n            dispatch(ImageMessageSend(formData));\r\n        }\r\n    }\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if (messageSendSuccess) {\r\n            socket.current.emit('sendMessage', message[message.length - 1]);\r\n            dispatch({\r\n                type: 'UPDATE_FRIEND_MESSAGE',\r\n                payload: {\r\n                    msgInfo: message[message.length - 1]\r\n                }\r\n            })\r\n            dispatch({ type: 'MESSAGE_SEND_SUCCESS_CLEAR' })\r\n        }\r\n    }, [messageSendSuccess])\r\n    useEffect(() => {\r\n        dispatch(getFriends());\r\n        dispatch({ type: 'NEW_USER_ADD_CLEAR' })\r\n    }, [new_user_add]);\r\n\r\n    // useEffect(() => {\r\n    //     if (friends && friends.length > 0) {\r\n    //         setCurrentFriend(friends[0].fndInfo);\r\n    //     }\r\n    // }, [friends])\r\n\r\n    useEffect(() => {\r\n        dispatch(getMessage(currentfriend._id));\r\n    }, [currentfriend?._id])\r\n    useEffect(() => {\r\n        if (message.length > 0) {\r\n            if (message[message.length - 1].senderId !== myInfo.id && message[message.length - 1].status !== 'seen') {\r\n                dispatch({\r\n                    type: 'UPDATE',\r\n                    payload: {\r\n                        id: currentfriend._id\r\n                    }\r\n                })\r\n                socket.current.emit('seen', { senderId: currentfriend._id, reseverId: myInfo.id });\r\n                dispatch(seenMessage({ _id: message[message.length - 1]._id }))\r\n            }\r\n        }\r\n        dispatch({\r\n            type: 'MESSAGE_GET_SUCCESS_CLEAR'\r\n        })\r\n    }, [message_get_success])\r\n    useEffect(() => {\r\n        scrollRef.current?.scrollIntoView({ behavior: 'smooth' })\r\n    }, [message]);\r\n    const [hide, setHide] = useState(true);\r\n    const logout = () => {\r\n        dispatch(userLogout());\r\n        socket.current.emit('logout', myInfo.id);\r\n        logoutSPlay();\r\n    }\r\n    useEffect(() => {\r\n        dispatch(getTheme());\r\n    }, []);\r\n    const search = (e) => {\r\n        const getFriendClass = document.getElementsByClassName('hover-friend');\r\n        const frienNameClass = document.getElementsByClassName('Fd_name');\r\n        for (var i = 0; i < getFriendClass.length, i < frienNameClass.length; i++) {\r\n            let text = frienNameClass[i].innerText.toLowerCase();\r\n            if (text.indexOf(e.target.value.toLowerCase()) > -1) {\r\n                getFriendClass[i].style.display = '';\r\n            } else {\r\n                getFriendClass[i].style.display = 'none';\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={themeMood === 'dark' ? 'messenger themeDark' : themeMood === 'black' ? 'messenger themeBlack' : 'messenger'}>\r\n            <Toaster\r\n                position={'top-right'}\r\n                reverseOrder={false}\r\n                toastOptions={{\r\n                    style: {\r\n                        fontSize: '18px'\r\n                    }\r\n                }}\r\n            />\r\n            <input type=\"checkbox\" id='friendCheckbox' />\r\n            <input type=\"radio\" className=\"tab-toggle\" name=\"tab-toggle\" id=\"tab1\" defaultChecked />\r\n            <input type=\"radio\" className=\"tab-toggle\" name=\"tab-toggle\" id=\"tab2\" />\r\n            <input type=\"radio\" className=\"tab-toggle\" name=\"tab-toggle\" id=\"tab3\" />\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <div className=\"left-side\">\r\n                        <input type=\"checkbox\" id='showMyInfo' />\r\n                        <div className=\"MyInfo\">\r\n                            <div className=\"image\">\r\n                                <img src={myInfo.image} alt=\"\" />\r\n                            </div>\r\n                            <div className=\"myDetils\">\r\n                                <p> {myInfo.userName}</p>\r\n                                <p> {myInfo.email.slice(0, 20)}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"top\">\r\n                            <label htmlFor=\"showMyInfo\">\r\n                                <div className=\"chats\">\r\n                                    <div className=\"icons\">\r\n                                        <div className=\"icon\">\r\n                                            <div className=\"menu\">\r\n                                                <div className=\"bar1\"></div>\r\n                                                <div className=\"bar2\"></div>\r\n                                                <div className=\"bar3\"></div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"image-name\">\r\n                                    <div className=\"image\">\r\n                                        <img src={myInfo.image} alt=\"\" />\r\n                                    </div>\r\n                                    <div className=\"name\">\r\n                                        <h3>{myInfo.userName}</h3>\r\n                                    </div>\r\n                                    <span className='chat-list'> Chats </span>\r\n                                    <span className='call-list'> Calls </span>\r\n                                    <span className='active-list'> People </span>\r\n                                </div>\r\n                            </label>\r\n                            <div className=\"icons\">\r\n                                <div className=\"iconTwo\">\r\n                                    <div onClick={() => setHide(!hide)} className=\"hamburger\">\r\n                                        <CgColorBucket />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"iconThree\">\r\n                                    <div onClick={logout} className=\"logout\">\r\n                                        <IoLogOutOutline />\r\n                                        <div className=\"logoutHover\">\r\n                                            Logout\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={hide ? 'theme_logout' : 'theme_logout show'}>\r\n                                    <div className=\"theme_logout_body\">\r\n                                        <h3>Theme</h3>\r\n                                        <div className=\"dark\">\r\n                                            <label htmlFor=\"dark\"> Dark </label>\r\n                                            <input onChange={(e) => dispatch(themeSet(e.target.value))} value='dark' type=\"radio\" name='theme' id='dark' />\r\n                                        </div>\r\n                                        <div className=\"black\">\r\n                                            <label htmlFor=\"black\"> Black </label>\r\n                                            <input onChange={(e) => dispatch(themeSet(e.target.value))} value='black' type=\"radio\" name='theme' id='black' />\r\n                                        </div>\r\n                                        <div className=\"light\">\r\n                                            <label htmlFor=\"light\"> Light </label>\r\n                                            <input onChange={(e) => dispatch(themeSet(e.target.value))} value='light' type=\"radio\" name='theme' id='light' />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"forCallTab\">\r\n                            <div className=\"tabOne\">\r\n                                <div className=\"friends\">\r\n                                    <div className=\"friend-search\">\r\n                                        <div className=\"search\">\r\n                                            <button><BiSearch /></button>\r\n                                            <input onChange={search} type=\"text\" placeholder='search' className=\"form-control\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    {\r\n                                        activeUser && activeUser.length > 0 ? <div className=\"active-friends\">\r\n                                            {\r\n                                                activeUser.map((u, i) => <ActiveFriend key={i} setCurrentFriend={setCurrentFriend} user={u} />)\r\n                                            }\r\n                                        </div> : ''}\r\n                                    {\r\n                                        friends && friends.length > 0 ? friends.map((fd, index) => <div key={index} onClick={() => setCurrentFriend(fd.fndInfo)} className={currentfriend._id === fd.fndInfo._id ? 'hover-friend active' : 'hover-friend'}>\r\n                                            <Friends activeUser={activeUser} myId={myInfo.id} friend={fd} />\r\n                                        </div>) : <div className=\"firstViewFriends\">No friend yet ... </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"tabTwo\">\r\n                                {\r\n                                    <ForCall\r\n                                        currentfriend={currentfriend}\r\n                                    />\r\n                                }\r\n                            </div>\r\n                            <div className=\"tabThree\">\r\n                                <span className='active-text'> Active now </span>\r\n                                <div className=\"friends\">\r\n                                    {\r\n                                        activeUser && activeUser.length > 0 ? <div>\r\n                                            {\r\n                                                activeUser && activeUser.length > 0 ? <div className=\"active-friends\">\r\n                                                    {\r\n                                                        activeUser.map((u, i) => <ActiveFriend key={i} setCurrentFriend={setCurrentFriend} user={u} />)\r\n                                                    }\r\n                                                </div> : ''}\r\n                                        </div> : <div className=\"NoActiveFriend\">No active friend  ... </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"proparty\">\r\n                            <label className=\"tab-trigger-one\" htmlFor=\"tab1\"><BsFillChatFill /><p>Chats</p></label>\r\n\r\n                            <label className=\"tab-trigger-two\" htmlFor=\"tab2\"><BsFillCameraVideoFill /><p>Calls</p></label>\r\n\r\n                            <label className=\"tab-trigger\" htmlFor=\"tab3\"><BsFillPeopleFill /><p>People</p></label>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                {\r\n                    currentfriend ? <RightSide\r\n                        activeUser={activeUser}\r\n                        ImageSend={ImageSend}\r\n                        currentfriend={currentfriend}\r\n                        inputHendle={inputHendle}\r\n                        newMessage={newMessage}\r\n                        sendMessage={sendMessage}\r\n                        message={message}\r\n                        scrollRef={scrollRef}\r\n                        emojiSend={emojiSend}\r\n                        typingMessage={typingMessage}\r\n                    /> : friends && friends.length > 0 ? <div className=\"firstView\">Select a chat to start messaging</div> : <div className=\"firstViewFriend\">No friend yet ... </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messenger","\r\nimport React from 'react'\r\nimport { Route,Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ProtectRoute = (props) => {\r\n    const {authenticate} = useSelector(state=>state.auth);\r\n    return authenticate?<Route path={props.path} component={props.component} exact={props.exact} />:<Redirect to='/messenger/login' />\r\n}\r\n\r\nexport default ProtectRoute","\r\nimport './App.css';\r\nimport { BrowserRouter as Router,Route,Switch } from \"react-router-dom\";\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport Messenger from './components/Messenger';\r\nimport ProtectRoute from './components/ProtectRoute';\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n            <Switch>\r\n                <Route path='/messenger/login' component={Login} exact></Route>\r\n                <Route path='/messenger/register' component={Register} exact></Route>\r\n                <ProtectRoute path='/' component={Messenger} exact />\r\n            </Switch>\r\n        </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { REGISTER_FAIL,REGISTER_SUCCESS,SUCCESS_MESSAGE_CLEAR,ERROR_CLEAR,USER_LOGIN_SUCCESS,USER_LOGIN_FAIL } from \"../types/authType\";\r\nimport deCodeToken from \"jwt-decode\";\r\nconst authState ={\r\n    loading : true,\r\n    authenticate : false,\r\n    error : '',\r\n    successMessage : '',\r\n    myInfo : ''\r\n}\r\n\r\nconst tokenDecode =(token) =>{\r\n    const tokenDecoded = deCodeToken(token);\r\n    const expTime = new Date(tokenDecoded.exp*1000);\r\n    if(new Date()>expTime){\r\n        return null;\r\n    }\r\n    return tokenDecoded;\r\n}\r\nconst getToken = localStorage.getItem('authToken');\r\nif(getToken){\r\n    const getInfo = tokenDecode(getToken);\r\n    if(getInfo){\r\n        authState.myInfo = getInfo;\r\n        authState.authenticate = true;\r\n        authState.loading = false\r\n    }\r\n}\r\n\r\n\r\nexport const authReducer = (state=authState, action) =>{\r\n    const {payload,type} = action;\r\n\r\n    if(type === REGISTER_FAIL || type === USER_LOGIN_FAIL){\r\n        return{\r\n            ...state,\r\n            error : payload.error,\r\n            authenticate : false,\r\n            myInfo : '',\r\n            loading : true\r\n        }\r\n    }\r\n    if(type=== REGISTER_SUCCESS || type === USER_LOGIN_SUCCESS){\r\n        const myInfo = tokenDecode(payload.token);\r\n        return{\r\n            ...state,\r\n            myInfo : myInfo,\r\n            successMessage : payload.successMessage,\r\n            error : '',\r\n            authenticate : true,\r\n            loading : false\r\n        }\r\n    }\r\n    if(type === SUCCESS_MESSAGE_CLEAR){\r\n        return{\r\n            ...state,\r\n            successMessage : '',\r\n        }\r\n    }\r\n    if(type === ERROR_CLEAR){\r\n        return{\r\n            ...state,\r\n            error : '',\r\n        }\r\n    }\r\n    if(type === 'LOGOUT_SUCCESS'){\r\n        return {\r\n            ...state,\r\n            authenticate: false,\r\n            myInfo : '',\r\n            successMessage : 'Logout successfull'\r\n        }\r\n    }\r\n    return state;\r\n}","import { FRIENDS_GET_SUCCESS,MESSAGE_GET_SUCCESS,MESSAGE_SEND_SUCCESS,UPDATE_FRIEND_MESSAGE,MESSAGE_SEND_SUCCESS_CLEAR,SEEN_MESSAGE,DELIVARED_MESSAGE,UPDATE,MESSAGE_GET_SUCCESS_CLEAR} from \"../types/messengerType\";\r\nconst messengerState = {\r\n    friends : [],\r\n    message : [],\r\n    messageSendSuccess : false,\r\n    message_get_success : false,\r\n    themeMood : '',\r\n    new_user_add : ''\r\n}\r\n\r\nexport const messengerReducer = (state=messengerState , action) =>{\r\n    const {type,payload} = action;\r\n    if(type === 'THEME_GET_SUCCESS' || type === 'THEME_SET_SUCCESS'){\r\n        return {\r\n            ...state,\r\n            themeMood : payload.theme\r\n        }\r\n    }\r\n    if(type === FRIENDS_GET_SUCCESS){\r\n        return {\r\n            ...state,\r\n            friends : payload.friends\r\n        }\r\n    }\r\n    if(type === MESSAGE_GET_SUCCESS){\r\n        return {\r\n            ...state,\r\n            message_get_success : true,\r\n            message : payload.message\r\n        }\r\n    }\r\n    if(type === MESSAGE_SEND_SUCCESS){\r\n        return {\r\n            ...state,\r\n            messageSendSuccess : true,\r\n            message : [...state.message,payload.message]\r\n        }\r\n    }\r\n    if(type === 'SOCKET_MESSAGE'){\r\n        return {\r\n            ...state,\r\n            message : [...state.message,payload.message]\r\n        }\r\n    }\r\n    if(type === UPDATE_FRIEND_MESSAGE){\r\n        const index = state.friends.findIndex(f=>f.fndInfo._id === payload.msgInfo.reseverId || f.fndInfo._id === payload.msgInfo.senderId );\r\n        state.friends[index].msgInfo = payload.msgInfo;\r\n        state.friends[index].msgInfo.status = payload.status;\r\n        return state;\r\n\r\n    }\r\n    if(type === MESSAGE_SEND_SUCCESS_CLEAR){\r\n        return {\r\n            ...state,\r\n            messageSendSuccess : false\r\n        }\r\n    }\r\n    if(type === SEEN_MESSAGE){\r\n        const index = state.friends.findIndex(f=>f.fndInfo._id === payload.msgInfo.reseverId || f.fndInfo._id === payload.msgInfo.senderId );\r\n        state.friends[index].msgInfo.status = 'seen';\r\n        return {\r\n            ...state\r\n        };\r\n    }\r\n    if(type === DELIVARED_MESSAGE){\r\n        const index = state.friends.findIndex(f=>f.fndInfo._id === payload.msgInfo.reseverId || f.fndInfo._id === payload.msgInfo.senderId );\r\n        state.friends[index].msgInfo.status = 'delivared';\r\n        return {\r\n            ...state\r\n        };\r\n    }\r\n    if(type === UPDATE){\r\n        const index = state.friends.findIndex(f=>f.fndInfo._id === payload.id);\r\n        if(state.friends[index].msgInfo){\r\n            state.friends[index].msgInfo.status = 'seen';\r\n        }\r\n        return {\r\n            ...state\r\n        }\r\n    }\r\n    if(type === MESSAGE_GET_SUCCESS_CLEAR){\r\n        return {\r\n            ...state,\r\n            message_get_success : false\r\n        }\r\n    }\r\n    if(type === 'SEEN_ALL'){\r\n        const index = state.friends.findIndex(f=>f.fndInfo._id === payload.reseverId);\r\n        state.friends[index].msgInfo.status = 'seen';\r\n        return {\r\n            ...state\r\n        }\r\n    }\r\n    if(type === 'LOGOUT_SUCCESS'){\r\n        return{\r\n            ...state,\r\n            friends : [],\r\n            message : [],\r\n            messageSendSuccess : false,\r\n            message_get_success : false,\r\n        }\r\n    }\r\n\r\n    if(type === 'NEW_USER_ADD'){\r\n        return{\r\n            ...state,\r\n            new_user_add : payload.new_user_add\r\n        }\r\n    }\r\n    if(type === 'NEW_USER_ADD_CLEAR'){\r\n        return {\r\n            ...state,\r\n            new_user_add : ''\r\n        }\r\n    }\r\n    \r\n    return state; \r\n}","import {createStore,compose,combineReducers,applyMiddleware } from \"redux\";\r\n\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport { authReducer } from \"./reducers/authReducer\";\r\nimport { messengerReducer } from \"./reducers/messengerReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth : authReducer,\r\n    messenger: messengerReducer\r\n})\r\n\r\nconst middleware = [thunkMiddleware];\r\n\r\nconst store = createStore(rootReducer,compose(\r\n   applyMiddleware(...middleware), //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n));\r\n\r\nexport default store; ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport './main.scss'\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from './store/index';\r\nimport { positions,transitions,Provider as AlertProvider } from \"react-alert\";\r\nimport  alertTemplate from 'react-alert-template-basic'\r\n\r\nconst options = {\r\n  timeout : 5000,\r\n  positions : positions.BOTTOM_CENTER,\r\n  transitions : transitions.SCALE\r\n}\r\n\r\nReactDOM.render(\r\n  \r\n    <Provider store={store}>\r\n      <AlertProvider template ={alertTemplate} {...options}>\r\n          <App/>\r\n      </AlertProvider>\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}